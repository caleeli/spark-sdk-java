/*
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.NotificationsEditable;

/**
 * Notifications
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-04-24T19:12:37.315Z[GMT]")
public class Notifications {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_NOTIFIABLE_TYPE = "notifiable_type";
  @SerializedName(SERIALIZED_NAME_NOTIFIABLE_TYPE)
  private String notifiableType;

  public static final String SERIALIZED_NAME_NOTIFIABLE_ID = "notifiable_id";
  @SerializedName(SERIALIZED_NAME_NOTIFIABLE_ID)
  private Integer notifiableId;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private String data;

  public Notifications id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Represents a notification definition.
   * @return id
  **/
  @ApiModelProperty(value = "Represents a notification definition.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Notifications type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Represents a notification definition.
   * @return type
  **/
  @ApiModelProperty(value = "Represents a notification definition.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Notifications notifiableType(String notifiableType) {
    this.notifiableType = notifiableType;
    return this;
  }

   /**
   * Represents a notification definition.
   * @return notifiableType
  **/
  @ApiModelProperty(value = "Represents a notification definition.")
  public String getNotifiableType() {
    return notifiableType;
  }

  public void setNotifiableType(String notifiableType) {
    this.notifiableType = notifiableType;
  }

  public Notifications notifiableId(Integer notifiableId) {
    this.notifiableId = notifiableId;
    return this;
  }

   /**
   * Represents a notification definition.
   * @return notifiableId
  **/
  @ApiModelProperty(value = "Represents a notification definition.")
  public Integer getNotifiableId() {
    return notifiableId;
  }

  public void setNotifiableId(Integer notifiableId) {
    this.notifiableId = notifiableId;
  }

  public Notifications data(String data) {
    this.data = data;
    return this;
  }

   /**
   * Represents a notification definition.
   * @return data
  **/
  @ApiModelProperty(value = "Represents a notification definition.")
  public String getData() {
    return data;
  }

  public void setData(String data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Notifications notifications = (Notifications) o;
    return Objects.equals(this.id, notifications.id) &&
        Objects.equals(this.type, notifications.type) &&
        Objects.equals(this.notifiableType, notifications.notifiableType) &&
        Objects.equals(this.notifiableId, notifications.notifiableId) &&
        Objects.equals(this.data, notifications.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, notifiableType, notifiableId, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Notifications {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    notifiableType: ").append(toIndentedString(notifiableType)).append("\n");
    sb.append("    notifiableId: ").append(toIndentedString(notifiableId)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

