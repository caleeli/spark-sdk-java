/*
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.List;
import org.openapitools.client.model.MediaEditable;

/**
 * Media
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-04-24T19:12:37.315Z[GMT]")
public class Media {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_MODEL_ID = "model_id";
  @SerializedName(SERIALIZED_NAME_MODEL_ID)
  private Integer modelId;

  public static final String SERIALIZED_NAME_MODEL_TYPE = "model_type";
  @SerializedName(SERIALIZED_NAME_MODEL_TYPE)
  private String modelType;

  public static final String SERIALIZED_NAME_COLLECTION_NAME = "collection_name";
  @SerializedName(SERIALIZED_NAME_COLLECTION_NAME)
  private String collectionName;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_FILE_NAME = "file_name";
  @SerializedName(SERIALIZED_NAME_FILE_NAME)
  private String fileName;

  public static final String SERIALIZED_NAME_MIME_TYPE = "mime_type";
  @SerializedName(SERIALIZED_NAME_MIME_TYPE)
  private String mimeType;

  public static final String SERIALIZED_NAME_DISK = "disk";
  @SerializedName(SERIALIZED_NAME_DISK)
  private String disk;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Integer size;

  public static final String SERIALIZED_NAME_MANIPULATIONS = "manipulations";
  @SerializedName(SERIALIZED_NAME_MANIPULATIONS)
  private String manipulations;

  public static final String SERIALIZED_NAME_CUSTOM_PROPERTIES = "custom_properties";
  @SerializedName(SERIALIZED_NAME_CUSTOM_PROPERTIES)
  private String customProperties;

  public static final String SERIALIZED_NAME_RESPONSIVE_IMAGES = "responsive_images";
  @SerializedName(SERIALIZED_NAME_RESPONSIVE_IMAGES)
  private List responsiveImages = null;

  public static final String SERIALIZED_NAME_ORDER_COLUMN = "order_column";
  @SerializedName(SERIALIZED_NAME_ORDER_COLUMN)
  private Integer orderColumn;

  public Media id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Represents media files stored in the database
   * @return id
  **/
  @ApiModelProperty(value = "Represents media files stored in the database")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Media modelId(Integer modelId) {
    this.modelId = modelId;
    return this;
  }

   /**
   * Represents media files stored in the database
   * @return modelId
  **/
  @ApiModelProperty(value = "Represents media files stored in the database")
  public Integer getModelId() {
    return modelId;
  }

  public void setModelId(Integer modelId) {
    this.modelId = modelId;
  }

  public Media modelType(String modelType) {
    this.modelType = modelType;
    return this;
  }

   /**
   * Represents media files stored in the database
   * @return modelType
  **/
  @ApiModelProperty(value = "Represents media files stored in the database")
  public String getModelType() {
    return modelType;
  }

  public void setModelType(String modelType) {
    this.modelType = modelType;
  }

  public Media collectionName(String collectionName) {
    this.collectionName = collectionName;
    return this;
  }

   /**
   * Represents media files stored in the database
   * @return collectionName
  **/
  @ApiModelProperty(value = "Represents media files stored in the database")
  public String getCollectionName() {
    return collectionName;
  }

  public void setCollectionName(String collectionName) {
    this.collectionName = collectionName;
  }

  public Media name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Represents media files stored in the database
   * @return name
  **/
  @ApiModelProperty(value = "Represents media files stored in the database")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Media fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Represents media files stored in the database
   * @return fileName
  **/
  @ApiModelProperty(value = "Represents media files stored in the database")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public Media mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Represents media files stored in the database
   * @return mimeType
  **/
  @ApiModelProperty(value = "Represents media files stored in the database")
  public String getMimeType() {
    return mimeType;
  }

  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }

  public Media disk(String disk) {
    this.disk = disk;
    return this;
  }

   /**
   * Represents media files stored in the database
   * @return disk
  **/
  @ApiModelProperty(value = "Represents media files stored in the database")
  public String getDisk() {
    return disk;
  }

  public void setDisk(String disk) {
    this.disk = disk;
  }

  public Media size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * Represents media files stored in the database
   * @return size
  **/
  @ApiModelProperty(value = "Represents media files stored in the database")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public Media manipulations(String manipulations) {
    this.manipulations = manipulations;
    return this;
  }

   /**
   * Represents media files stored in the database
   * @return manipulations
  **/
  @ApiModelProperty(value = "Represents media files stored in the database")
  public String getManipulations() {
    return manipulations;
  }

  public void setManipulations(String manipulations) {
    this.manipulations = manipulations;
  }

  public Media customProperties(String customProperties) {
    this.customProperties = customProperties;
    return this;
  }

   /**
   * Represents media files stored in the database
   * @return customProperties
  **/
  @ApiModelProperty(value = "Represents media files stored in the database")
  public String getCustomProperties() {
    return customProperties;
  }

  public void setCustomProperties(String customProperties) {
    this.customProperties = customProperties;
  }

  public Media responsiveImages(List responsiveImages) {
    this.responsiveImages = responsiveImages;
    return this;
  }

   /**
   * Represents media files stored in the database
   * @return responsiveImages
  **/
  @ApiModelProperty(value = "Represents media files stored in the database")
  public List getResponsiveImages() {
    return responsiveImages;
  }

  public void setResponsiveImages(List responsiveImages) {
    this.responsiveImages = responsiveImages;
  }

  public Media orderColumn(Integer orderColumn) {
    this.orderColumn = orderColumn;
    return this;
  }

   /**
   * Represents media files stored in the database
   * @return orderColumn
  **/
  @ApiModelProperty(value = "Represents media files stored in the database")
  public Integer getOrderColumn() {
    return orderColumn;
  }

  public void setOrderColumn(Integer orderColumn) {
    this.orderColumn = orderColumn;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Media media = (Media) o;
    return Objects.equals(this.id, media.id) &&
        Objects.equals(this.modelId, media.modelId) &&
        Objects.equals(this.modelType, media.modelType) &&
        Objects.equals(this.collectionName, media.collectionName) &&
        Objects.equals(this.name, media.name) &&
        Objects.equals(this.fileName, media.fileName) &&
        Objects.equals(this.mimeType, media.mimeType) &&
        Objects.equals(this.disk, media.disk) &&
        Objects.equals(this.size, media.size) &&
        Objects.equals(this.manipulations, media.manipulations) &&
        Objects.equals(this.customProperties, media.customProperties) &&
        Objects.equals(this.responsiveImages, media.responsiveImages) &&
        Objects.equals(this.orderColumn, media.orderColumn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, modelId, modelType, collectionName, name, fileName, mimeType, disk, size, manipulations, customProperties, responsiveImages, orderColumn);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Media {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
    sb.append("    modelType: ").append(toIndentedString(modelType)).append("\n");
    sb.append("    collectionName: ").append(toIndentedString(collectionName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    disk: ").append(toIndentedString(disk)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    manipulations: ").append(toIndentedString(manipulations)).append("\n");
    sb.append("    customProperties: ").append(toIndentedString(customProperties)).append("\n");
    sb.append("    responsiveImages: ").append(toIndentedString(responsiveImages)).append("\n");
    sb.append("    orderColumn: ").append(toIndentedString(orderColumn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

