/*
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TaskAssignmentsEditable
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-04-24T19:12:37.315Z[GMT]")
public class TaskAssignmentsEditable {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PROCESS_ID = "process_id";
  @SerializedName(SERIALIZED_NAME_PROCESS_ID)
  private String processId;

  public static final String SERIALIZED_NAME_PROCESS_TASK_ID = "process_task_id";
  @SerializedName(SERIALIZED_NAME_PROCESS_TASK_ID)
  private String processTaskId;

  public static final String SERIALIZED_NAME_ASSIGNMENT_ID = "assignment_id";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENT_ID)
  private String assignmentId;

  /**
   * Represents a business process task assignment definition.
   */
  @JsonAdapter(AssignmentTypeEnum.Adapter.class)
  public enum AssignmentTypeEnum {
    USER("ProcessMaker\\Models\\User"),
    
    GROUP("ProcessMaker\\Models\\Group");

    private String value;

    AssignmentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AssignmentTypeEnum fromValue(String text) {
      for (AssignmentTypeEnum b : AssignmentTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }

    public static class Adapter extends TypeAdapter<AssignmentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AssignmentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AssignmentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AssignmentTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  public static final String SERIALIZED_NAME_ASSIGNMENT_TYPE = "assignment_type";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENT_TYPE)
  private AssignmentTypeEnum assignmentType;

  public TaskAssignmentsEditable id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Represents a business process task assignment definition.
   * @return id
  **/
  @ApiModelProperty(value = "Represents a business process task assignment definition.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TaskAssignmentsEditable processId(String processId) {
    this.processId = processId;
    return this;
  }

   /**
   * Represents a business process task assignment definition.
   * @return processId
  **/
  @ApiModelProperty(value = "Represents a business process task assignment definition.")
  public String getProcessId() {
    return processId;
  }

  public void setProcessId(String processId) {
    this.processId = processId;
  }

  public TaskAssignmentsEditable processTaskId(String processTaskId) {
    this.processTaskId = processTaskId;
    return this;
  }

   /**
   * Represents a business process task assignment definition.
   * @return processTaskId
  **/
  @ApiModelProperty(value = "Represents a business process task assignment definition.")
  public String getProcessTaskId() {
    return processTaskId;
  }

  public void setProcessTaskId(String processTaskId) {
    this.processTaskId = processTaskId;
  }

  public TaskAssignmentsEditable assignmentId(String assignmentId) {
    this.assignmentId = assignmentId;
    return this;
  }

   /**
   * Represents a business process task assignment definition.
   * @return assignmentId
  **/
  @ApiModelProperty(value = "Represents a business process task assignment definition.")
  public String getAssignmentId() {
    return assignmentId;
  }

  public void setAssignmentId(String assignmentId) {
    this.assignmentId = assignmentId;
  }

  public TaskAssignmentsEditable assignmentType(AssignmentTypeEnum assignmentType) {
    this.assignmentType = assignmentType;
    return this;
  }

   /**
   * Represents a business process task assignment definition.
   * @return assignmentType
  **/
  @ApiModelProperty(value = "Represents a business process task assignment definition.")
  public AssignmentTypeEnum getAssignmentType() {
    return assignmentType;
  }

  public void setAssignmentType(AssignmentTypeEnum assignmentType) {
    this.assignmentType = assignmentType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskAssignmentsEditable taskAssignmentsEditable = (TaskAssignmentsEditable) o;
    return Objects.equals(this.id, taskAssignmentsEditable.id) &&
        Objects.equals(this.processId, taskAssignmentsEditable.processId) &&
        Objects.equals(this.processTaskId, taskAssignmentsEditable.processTaskId) &&
        Objects.equals(this.assignmentId, taskAssignmentsEditable.assignmentId) &&
        Objects.equals(this.assignmentType, taskAssignmentsEditable.assignmentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, processId, processTaskId, assignmentId, assignmentType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskAssignmentsEditable {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    processId: ").append(toIndentedString(processId)).append("\n");
    sb.append("    processTaskId: ").append(toIndentedString(processTaskId)).append("\n");
    sb.append("    assignmentId: ").append(toIndentedString(assignmentId)).append("\n");
    sb.append("    assignmentType: ").append(toIndentedString(assignmentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

