/*
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import ProcessMaker_Client.ApiException;
import org.openapitools.client.model.Groups;
import org.openapitools.client.model.InlineObject;
import org.openapitools.client.model.InlineObject1;
import org.openapitools.client.model.InlineResponse2002;
import org.openapitools.client.model.InlineResponse2003;
import org.openapitools.client.model.InlineResponse2004;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FilesApi
 */
@Ignore
public class FilesApiTest {

    private final FilesApi api = new FilesApi();

    
    /**
     * Save a new media file
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createFileTest() throws ApiException {
        String requestId = null;
        InlineObject inlineObject = null;
        Integer mediaId = null;
        String media = null;
        InlineResponse2003 response = api.createFile(requestId, inlineObject, mediaId, media);

        // TODO: test validations
    }
    
    /**
     * Delete a media file
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteFileTest() throws ApiException {
        String requestId = null;
        api.deleteFile(requestId);

        // TODO: test validations
    }
    
    /**
     * Returns the list of files associated to a request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFilesTest() throws ApiException {
        String requestId = null;
        String filter = null;
        String orderBy = null;
        String orderDirection = null;
        Integer perPage = null;
        InlineResponse2002 response = api.getFiles(requestId, filter, orderBy, orderDirection, perPage);

        // TODO: test validations
    }
    
    /**
     * Get a file uploaded to a request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFilesByIdTest() throws ApiException {
        String fileId = null;
        String requestId = null;
        Groups response = api.getFilesById(fileId, requestId);

        // TODO: test validations
    }
    
    /**
     * Update a media file
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateFileTest() throws ApiException {
        String fileId = null;
        String requestId = null;
        InlineObject1 inlineObject1 = null;
        InlineResponse2004 response = api.updateFile(fileId, requestId, inlineObject1);

        // TODO: test validations
    }
    
}
