/*
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import ProcessMaker_Client.ApiException;
import org.openapitools.client.model.GroupMembers;
import org.openapitools.client.model.GroupMembersEditable;
import org.openapitools.client.model.InlineResponse2007;
import org.openapitools.client.model.InlineResponse2008;
import org.openapitools.client.model.InlineResponse2009;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GroupMembersApi
 */
@Ignore
public class GroupMembersApiTest {

    private final GroupMembersApi api = new GroupMembersApi();

    
    /**
     * Save a new group member
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createGroupMemberTest() throws ApiException {
        GroupMembersEditable groupMembersEditable = null;
        GroupMembers response = api.createGroupMember(groupMembersEditable);

        // TODO: test validations
    }
    
    /**
     * Delete a group member
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteGroupMemberTest() throws ApiException {
        String groupMemberId = null;
        GroupMembers response = api.deleteGroupMember(groupMemberId);

        // TODO: test validations
    }
    
    /**
     * Get single group member by ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGroupMemberByIdTest() throws ApiException {
        String groupMemberId = null;
        GroupMembers response = api.getGroupMemberById(groupMemberId);

        // TODO: test validations
    }
    
    /**
     * Returns all groups for a given member
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGroupMembersTest() throws ApiException {
        Integer memberId = null;
        String orderBy = null;
        String orderDirection = null;
        Integer perPage = null;
        InlineResponse2007 response = api.getGroupMembers(memberId, orderBy, orderDirection, perPage);

        // TODO: test validations
    }
    
    /**
     * Returns all groups available for a given member
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGroupMembersAvailableTest() throws ApiException {
        String memberId = null;
        String memberType = null;
        String filter = null;
        String orderBy = null;
        String orderDirection = null;
        Integer perPage = null;
        InlineResponse2008 response = api.getGroupMembersAvailable(memberId, memberType, filter, orderBy, orderDirection, perPage);

        // TODO: test validations
    }
    
    /**
     * Returns all users available for a given member
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserMembersAvailableTest() throws ApiException {
        String groupId = null;
        String filter = null;
        String orderBy = null;
        String orderDirection = null;
        Integer perPage = null;
        InlineResponse2009 response = api.getUserMembersAvailable(groupId, filter, orderBy, orderDirection, perPage);

        // TODO: test validations
    }
    
}
